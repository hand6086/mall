<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hand.base.user.dao.mybatis.mapper.TokenMapper">
	<resultMap type="com.hand.base.user.model.Token"
		id="token"></resultMap>
	
	<sql id="queryAllSql">
	SELECT 
		 T1.ROW_ID            as id                  /*记录编号*/
		,T1.CREATED           as created             /*创建时间*/
		,T1.CREATED_BY        as createdBy           /*创建者ID*/
		,T1.LAST_UPD  as lastUpdated         /*最后更新时间*/
		,T1.LAST_UPD_BY       as lastUpdatedBy       /*最后更新者ID*/
		,T1.CORP_ID           as corpid              /*公司账套*/
		,T1.ORG_ID            as orgId               /*组织ID*/
		,T1.POSTN_ID          as postnId             /*职位ID*/
		,T1.J_USERNAME        as username            /*用户名*/
		,T1.J_PASSWORD        as password            /*密码*/
		,T1.END_DATE          as endDate             /*结束时间*/
		,T1.START_DATE        as startDate           /*开始时间*/
		,T1.TOKEN             as token               /*Token*/
		,T1.MD_KEY            as mdKey               /*MD_KEY*/
		,t2.`name`		  as storeName 	    	     /*企业名称*/
	</sql>
	
	<sql id="fromTableSql">
	FROM LNK_TOKEN T1
	LEFT JOIN lnk_enterprise t2 on t1.corp_id = t2.corp_id
	WHERE 1=1


	</sql>
	
	<sql id="whereAllSql">

	</sql>
	
	<sql id="orderByAllSql">
		order by T1.CREATED DESC
	</sql>	
	
	<!-- 记录总数 -->
	<select id="queryCountByExample" resultType="java.lang.Integer" parameterType="com.hand.base.user.model.Token">
		SELECT count(1)
		<include refid="fromTableSql"/>
		<include refid="whereAllSql"/>
	</select>
	
	<select id="queryByExamplePage" resultMap="token"
		parameterType="com.hand.base.user.model.Token">
		<include refid="queryAllSql"/>
		<include refid="fromTableSql"/>
		<include refid="whereAllSql"/>
	</select>
	
	<select id="queryById" resultMap="token"
		parameterType="com.hand.base.user.model.Token">
		<include refid="queryAllSql"/>
		<include refid="fromTableSql"/>
		and T1.ROW_ID=#{id}
	</select>
	
	<select id="queryAll" resultMap="token"
		parameterType="com.hand.base.user.model.Token">
		<include refid="queryAllSql"/>
		<include refid="fromTableSql"/>
		<include refid="whereAllSql"/>
	</select>

	<insert id="insert" parameterType="com.hand.base.user.model.Token">
		INSERT INTO LNK_TOKEN(
		 ROW_ID              /*记录ID*/
		,J_USERNAME          /*用户名*/
		,J_PASSWORD          /*密码*/
		,END_DATE            /*结束时间*/
		,START_DATE          /*开始时间*/
		,TOKEN               /*Token*/
		,MD_KEY              /*mdKey*/
		) values (

		 #{id}               /*记录ID*/
		,#{username}         /*用户名*/
		,#{password}         /*密码*/
		,#{endDate}          /*结束时间*/
		,#{startDate}        /*开始时间*/
		,S_GET_NEXT_TOKEN()            /*Token*/
		,S_GET_NEXT_MD_KEY()           /*mdKey*/
		)
	</insert>

	<update id="update" parameterType="com.hand.base.user.model.Token">
		UPDATE LNK_TOKEN SET
		 J_USERNAME          =#{username}         /*用户名*/
		,J_PASSWORD          =#{password}         /*密码*/
		,END_DATE            =#{endDate}          /*结束时间*/
		,START_DATE          =#{startDate}        /*开始时间*/
		,TOKEN               =#{token}            /*Token*/
		WHERE ROW_ID=#{id}
	</update>
	<delete id="deleteById" parameterType="com.hand.base.user.model.Token">
		DELETE FROM LNK_TOKEN WHERE ROW_ID=#{id}
	</delete>
	
	<update id="updateToken" parameterType="com.hand.base.user.model.Token">
		UPDATE lnk_token t
		SET t.LAST_UPD = now(),
		 	t.LAST_UPD_BY = '0-1',
			t.START_DATE = now(),
			t.END_DATE = date_add(now(), interval + 10 minute),
			t.token = #{token}
		WHERE
			t.row_id = #{id}
	</update>
	
	<update id="updateTokenValidTime" parameterType="com.hand.base.user.model.Token">
		UPDATE lnk_token t
		SET t.LAST_UPD = now(),
		 	t.LAST_UPD_BY = '0-1',
			t.START_DATE = now(),
			t.END_DATE = date_add(now(), interval + 10 minute)
		WHERE
			t.row_id = #{id}
	</update>
	
	
	<select id="queryTokenByUsername" parameterType="java.lang.String" resultType="com.hand.base.user.model.Token">
		SELECT
			t.ROW_ID id,
			t.CREATED created,
			t.CREATED_BY createdBy,
			t.LAST_UPD lastUpdated,
			t.LAST_UPD_BY lastUpdatedBy,
			DATE_FORMAT(t.START_DATE, '%Y-%m-%d %H:%i:%S') startDate,
			DATE_FORMAT(t.END_DATE, '%Y-%m-%d %H:%i:%S') endDate,
			t.TOKEN token,
			t.J_PASSWORD password,
			t.MD_KEY mdKey,
			DATE_FORMAT(now(), '%Y-%m-%d %H:%i:%S') current
		FROM
			lnk_token t
		WHERE 1 = 1
		 and t.J_USERNAME = #{username}
	
	</select>
	
	<select id="queryTokenByToken" parameterType="java.lang.String" resultType="com.hand.base.user.model.Token">
		SELECT
			t.row_id id,
			t.corp_id corpid,
			t.md_key mdKey,
			t.START_DATE startDate,
			t.END_DATE endDate,
			t.J_USERNAME username,
			t.MD_KEY mdKey,
			date_format(now(),'%Y-%m-%d %H:%i:%S') current
		FROM
			lnk_token t
		WHERE 1 = 1
		 and t.TOKEN = #{token}
	</select>
	
	
	<select id="queryTokenByTokenAndKey" parameterType="com.hand.base.user.model.Token" resultType="com.hand.base.user.model.Token">
		SELECT
			t.row_id id,
			t.corp_id corpid,
			t.md_key mdKey,
			t.START_DATE startDate,
			t.END_DATE endDate,
			t.J_USERNAME username,
			t.MD_KEY mdKey,
			date_format(now(),'%Y-%m-%d %H:%i:%S') current
		FROM
			lnk_token t
		WHERE 1 = 1
		 and t.TOKEN = #{token}
		 and t.MD_KEY = #{mdKey}
	</select>
	
	
	<select id="queryToken" parameterType="com.hand.base.user.model.Token" resultMap="token">
		SELECT
			t.ROW_ID id,
			t.CREATED created,
			t.CREATED_BY createdBy,
			t.LAST_UPD lastUpdated,
			t.LAST_UPD_BY lastUpdatedBy,
			t.START_DATE startDate,
			t.END_DATE endDate,
			t.TOKEN token
		FROM
			lnk_token t
		WHERE 1 = 1
		 and t.J_USERNAME = #{username}
		 and t.J_PASSWORD = #{password}
		 and now() between str_to_date(t.START_DATE, '%Y-%m-%d %H:%i:%s') and str_to_date(t.END_DATE, '%Y-%m-%d %H:%i:%s')
	</select>
	
	<insert id="insertToken" parameterType="com.hand.base.user.model.Token">
		INSERT INTO lnk_token (
			ROW_ID,
			CREATED,
			CREATED_BY,
			LAST_UPD,
			LAST_UPD_BY,
			START_DATE,
			END_DATE,
			LOGIN,
			TOKEN
		)
		VALUES
			(
				s_sequence_pkg_get_next_rowid (),
				now(),
				'0-1',
				now(),
				'0-1',
				now(),
				date_add(now(), interval + 10 minute),
				#{login},
				#{token}
			)
	</insert>
	
	
</mapper>
