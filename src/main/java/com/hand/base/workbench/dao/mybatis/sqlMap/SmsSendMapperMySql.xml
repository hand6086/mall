<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hand.base.workbench.dao.mybatis.mapper.SmsSendMapper">
	<resultMap type="com.hand.base.workbench.model.SmsSend" id="smsSend"></resultMap>
	
	<sql id="queryAllSql">
	select
	T.ROW_ID as id,
	date_format(T.CREATED,'%Y-%m-%d %H:%i:%S') as created,
	T.CREATED_BY as createdBy,
	date_format(T.LAST_UPD, '%Y-%m-%d %H:%i:%S') as lastUpdated,
	T.LAST_UPD_BY as lastUpdatedBy,
	t.TEXT_CONTENT textContent,
	date_format(t.SEND_TIME, '%Y-%m-%d %H:%i:%S') as sendTime,
	CONCAT(t1.LAST_NAME, t1.FST_NAME) AS fullName,
	t.ACTIVE_FLAG activeFlag,
	t.T_ATTR_02 determineFlag,
	t.SEND_FLAG sendFlag,
	t.T_ATTR_09 succeedNum,
	t.T_ATTR_10 failedNum,
	concat(round(If ( ( IfNull (t.T_ATTR_09,0) +  IfNull (t.T_ATTR_10,0)) = 0,0, IfNull (t.T_ATTR_09,0)*100 / ( IfNull (t.T_ATTR_09,0) +  IfNull (t.T_ATTR_10,0))),2),'%') as succeedRate,
	t.T_ATTR_01 templateId
	</sql>

	<sql id="fromSql">
		from CX_O_SMS_SEND t
		LEFT JOIN S_CONTACT t1 on t1.ROW_ID = t.CREATED_BY
  	</sql>
  	
  	<sql id="whereAllSql">
  		where 1 = 1
  	</sql>
  	
  	<select id="queryByExamplePage" parameterType="com.hand.base.workbench.model.SmsSend" resultMap="smsSend">
  		<include refid="queryAllSql"/>
		<include refid="fromSql"/>
		<include refid="whereAllSql"/>
		order by t.CREATED desc
  	</select>
  	
  	 	
	<select id="queryById" resultType="com.hand.base.workbench.model.SmsSend"
		parameterType="com.hand.base.workbench.model.SmsSend">		
		<include refid="queryAllSql"/>
		<include refid="fromSql"/>
		where t.ROW_ID=#{id}
	</select>
  	
  	<insert id="insert" parameterType="com.hand.base.workbench.model.SmsSend">
		insert into CX_O_SMS_SEND
		  (ROW_ID, TEXT_CONTENT , SEND_TIME, ACTIVE_FLAG , T_ATTR_02, SEND_FLAG , T_ATTR_09
		  , T_ATTR_10 , T_ATTR_01)
		values
		  (#{id},#{textContent},#{sendTime},#{activeFlag},#{determineFlag},#{sendFlag},lnk_blank_str_to_null(#{succeedNum,jdbcType=FLOAT})
		   ,lnk_blank_str_to_null(#{failedNum,jdbcType=FLOAT}),#{templateId})
	</insert>
  
	<update id="update" parameterType="com.hand.base.workbench.model.SmsSend">
		update CX_O_SMS_SEND t
		   set t.TEXT_CONTENT = #{textContent}, t.SEND_TIME = #{sendTime}, t.ACTIVE_FLAG = #{activeFlag},
		       t.T_ATTR_02 = #{determineFlag}, t.SEND_FLAG = #{sendFlag}, t.T_ATTR_09 = #{succeedNum},
		       t.T_ATTR_10 = #{failedNum}, t.T_ATTR_01 = #{templateId}
		 where t.row_id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="com.hand.base.workbench.model.SmsSend">
		DELETE FROM CX_O_SMS_SEND WHERE ROW_ID = #{id}
	</delete>
	
	<select id="querySmsLineAll" parameterType="com.hand.base.workbench.model.SmsSend" resultMap="smsSend">
	SELECT
	T.ROW_ID as id,
	date_format(T.CREATED,'%Y-%m-%d %H:%i:%S') as created,
	T.CREATED_BY as createdBy,
	date_format(T.LAST_UPD, '%Y-%m-%d %H:%i:%S') as lastUpdated,
	T.LAST_UPD_BY as lastUpdatedBy,
	t.PHONE_NUMBER phoneNumber,
	t.T_ATTR_03 sendLotId,
	t1.DATE_CREATED dateCreated,
	t1.STATUS_CODE statusCode,
	t1.STATUS_MSG statusMessage,
	t1.T_ATTR_05 sendTime,
	t1.T_ATTR_04 sendStatus,
	t.T_ATTR_04 receiveTime,
	t.T_ATTR_05 receiveStatus,
	t.SEND_FLAG backFlag,
	t.HEAD_ID headId,
	t1.MESSAGE_SID messageSid
	from CX_O_SMS_SE_LN t
	LEFT JOIN CX_O_SMS_SE_LOT t1 on t1.ROW_ID=t.T_ATTR_03
	LEFT JOIN CX_O_SMS_SEND t2 on t2.ROW_ID=t.HEAD_ID
	where (
			(t1.STATUS_CODE='000000' and (t.SEND_FLAG != 'Y' or t.SEND_FLAG is null))
			or (t1.STATUS_CODE='111111' and t.SEND_FLAG = 'Y')
			or (t1.STATUS_CODE='112356' and t.SEND_FLAG = 'Y')
		  )
	and t2.ROW_ID is not null
	limit 5000
  	</select>
  	
  	<select id="querySmsAll" parameterType="com.hand.base.workbench.model.SmsSend" resultMap="smsSend">
	  	SELECT
		T.ROW_ID as id,
		date_format(T.CREATED,'%Y-%m-%d %H:%i:%S') as created,
		T.CREATED_BY as createdBy,
		date_format(T.LAST_UPD, '%Y-%m-%d %H:%i:%S') as lastUpdated,
		T.LAST_UPD_BY as lastUpdatedBy,
		t.PHONE_NUMBER phoneNumber,
		t.T_ATTR_03 sendLotId,
		t1.DATE_CREATED dateCreated,
		t1.STATUS_CODE statusCode,
		t1.STATUS_MSG statusMessage,
		t1.T_ATTR_05 sendTime,
		t1.T_ATTR_04 sendStatus,
		t.T_ATTR_04 receiveTime,
		t.T_ATTR_05 receiveStatus,
		t.SEND_FLAG backFlag,
		t.HEAD_ID headId
		from CX_O_SMS_SE_LN t
		LEFT JOIN CX_O_SMS_SE_LOT t1 on t1.ROW_ID=t.T_ATTR_03
		where t.HEAD_ID = #{id}
  	</select>
  	
  	<select id="queryDistinctSmsAll" parameterType="com.hand.base.workbench.model.SmsSend" resultMap="smsSend">
	  	SELECT
		T.ROW_ID as id,
		date_format(T.CREATED,'%Y-%m-%d %H:%i:%S') as created,
		T.CREATED_BY as createdBy,
		date_format(T.LAST_UPD, '%Y-%m-%d %H:%i:%S') as lastUpdated,
		T.LAST_UPD_BY as lastUpdatedBy,
		t.PHONE_NUMBER phoneNumber,
		t.T_ATTR_03 sendLotId,
		t1.DATE_CREATED dateCreated,
		t1.STATUS_CODE statusCode,
		t1.STATUS_MSG statusMessage,
		t1.T_ATTR_05 sendTime,
		t1.T_ATTR_04 sendStatus,
		t.T_ATTR_04 receiveTime,
		t.T_ATTR_05 receiveStatus,
		t.SEND_FLAG backFlag,
		t.HEAD_ID headId,
		count(distinct t.PHONE_NUMBER)
		from CX_O_SMS_SE_LN t
		LEFT JOIN CX_O_SMS_SE_LOT t1 on t1.ROW_ID=t.T_ATTR_03
		where t.HEAD_ID = #{id}
		group by t.PHONE_NUMBER
  	</select>
  	
	<select id="querySmsLotAll" parameterType="com.hand.base.workbench.model.SmsSend" resultMap="smsSend">
	SELECT
	T.ROW_ID as id,
	date_format(T.CREATED,'%Y-%m-%d %H:%i:%S') as created,
	T.CREATED_BY as createdBy,
	date_format(T.LAST_UPD, '%Y-%m-%d %H:%i:%S') as lastUpdated,
	T.LAST_UPD_BY as lastUpdatedBy,
	t.T_ATTR_01 backFlag,
	t.DATE_CREATED dateCreated,
	t.MESSAGE_SID messageSid,
	t.T_ATTR_04 sendStatus,
	t.T_ATTR_05 sendTime,
	t.STATUS_CODE statusCode,
	t.STATUS_MSG statusMsg,
	t.HEAD_ID headId
	from CX_O_SMS_SE_LOT t
	where t.T_ATTR_01='N' and t.STATUS_CODE='000000'
  	</select>

</mapper>